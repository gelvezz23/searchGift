{"version":3,"sources":["components/addCategory.jsx","components/gifItem.jsx","helpers/getGift.js","hooks/useFetchGift.js","components/gifGrid.jsx","gifExpertApp.jsx","index.js"],"names":["AddCategory","setcategories","categories","useState","inputValue","setinputValue","onSubmit","event","preventDefault","trim","length","type","placeholder","value","onChange","target","GifItem","id","title","image","console","log","className","alt","src","getGift","category","a","url","encodeURI","fetch","method","headers","resp","json","data","gift","map","img","images","downsized_medium","useFetchGift","loading","state","setstate","useEffect","then","imags","GifGrid","GifExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"2MAsCeA,MAjCf,YAAqD,IAA9BC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,WAAc,EACfC,mBAAS,IADM,mBAC5CC,EAD4C,KAChCC,EADgC,KAgBnD,OACC,uBAAMC,SAdc,SAACC,GACrBA,EAAMC,iBAEFJ,EAAWK,OAAOC,OAAS,IAC9BT,EAAc,CAACG,GAAF,mBAAiBF,KAC9BG,EAAc,MASf,UACC,uBACCM,KAAK,OACLC,YAAY,mBACZC,MAAOT,EACPU,SAViB,SAACP,GACpBF,EAAcE,EAAMQ,OAAOF,UAW1B,wBAAQF,KAAK,SAAb,gC,QCfYK,MAVf,YAAwC,IAArBC,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MAE7B,OADAC,QAAQC,IAAI,CAAEJ,KAAIC,QAAOC,UAExB,sBAAKG,UAAU,6CAAf,UACC,6BAAKJ,IACL,qBAAKK,IAAKL,EAAOM,IAAKL,Q,uBCPZM,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAChBC,EADgB,iDACgCC,UACrDH,GAFqB,+DAIHI,MAAMF,EAAK,CAC7BG,OAAQ,MACRC,QAAS,CAAE,eAAgB,sBANN,cAIhBC,EAJgB,gBAQCA,EAAKC,OARN,uBAQdC,EARc,EAQdA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACNrB,GAAIqB,EAAIrB,GACRE,MAAK,UAAEmB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBZ,IACpCV,MAAOoB,EAAIpB,UAdS,kBAkBfkB,GAlBe,4CAAH,sDCoBLK,EAjBa,SAACf,GAAc,IAAD,EACfvB,mBAAS,CAClCgC,KAAM,GACNO,SAAS,IAH+B,mBAClCC,EADkC,KAC3BC,EAD2B,KAczC,OARAC,qBAAU,WACTpB,EAAQC,GAAUoB,MAAK,SAACC,GAAD,OACtBH,EAAS,CACRT,KAAMY,EACNL,SAAS,SAGT,CAAChB,IACGiB,GCKOK,MAlBf,YAAgC,IAAbtB,EAAY,EAAZA,SAAY,EACJe,EAAaf,GAA/BS,EADsB,EACtBA,KAAMO,EADgB,EAChBA,QAEd,OACC,qCACC,oBAAIpB,UAAU,wCAAd,SAAuDI,IAEtDgB,GAAW,4CAEZ,qBAAKpB,UAAU,kDAAf,SACEa,EAAKE,KAAI,SAACC,GACV,OAAO,cAAC,EAAD,eAA0BA,GAAZA,EAAIrB,aCKfgC,MAjBf,WAAwB,MAEa9C,mBAAS,CAAC,cAFvB,mBAEhBD,EAFgB,KAEJD,EAFI,KAIvB,OACC,qCACC,8CACA,cAAC,EAAD,CAAaC,WAAYA,EAAYD,cAAeA,IACpD,uBAECC,EAAWmC,KAAI,SAACX,EAAUwB,GAC1B,OAAO,cAAC,EAAD,CAAqBxB,SAAUA,GAAjBwB,UCTzBC,IAASC,OACR,mCACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.ed0b069e.chunk.js","sourcesContent":["/** @format */\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction AddCategory({ setcategories, categories }) {\n\tconst [inputValue, setinputValue] = useState('');\n\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\n\t\tif (inputValue.trim().length > 2) {\n\t\t\tsetcategories([inputValue, ...categories]);\n\t\t\tsetinputValue('');\n\t\t}\n\t};\n\n\tconst handleValue = (event) => {\n\t\tsetinputValue(event.target.value);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit}>\n\t\t\t<input\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Escribe algo ...'\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={handleValue}\n\t\t\t/>\n\t\t\t<button type='submit'> Agregar nuevo</button>\n\t\t</form>\n\t);\n}\n\nAddCategory.propTypes = {\n\tsetcategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","/** @format */\n\nimport React from 'react';\n\nfunction GifItem({ id, title, image }) {\n\tconsole.log({ id, title, image });\n\treturn (\n\t\t<div className='card animate__animated animate__fadeInDown'>\n\t\t\t<h5>{title}</h5>\n\t\t\t<img alt={title} src={image} />\n\t\t</div>\n\t);\n}\n\nexport default GifItem;\n","/** @format */\n\nexport const getGift = async (category) => {\n\tconst url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n\t\tcategory\n\t)}&limit=12&api_key=OGQ06BtQ53R6QGAxD15WKM9ognm9izX2`;\n\tconst resp = await fetch(url, {\n\t\tmethod: 'GET',\n\t\theaders: { 'Content-Type': 'application/json' },\n\t});\n\tconst { data } = await resp.json();\n\n\tconst gift = data.map((img) => {\n\t\treturn {\n\t\t\tid: img.id,\n\t\t\timage: img.images?.downsized_medium.url,\n\t\t\ttitle: img.title,\n\t\t};\n\t});\n\n\treturn gift;\n};\n","/** @format */\n\nimport { useEffect, useState } from 'react';\nimport { getGift } from './../helpers/getGift';\n\nexport const useFetchGift = (category) => {\n\tconst [state, setstate] = useState({\n\t\tdata: [],\n\t\tloading: true,\n\t});\n\n\tuseEffect(() => {\n\t\tgetGift(category).then((imags) =>\n\t\t\tsetstate({\n\t\t\t\tdata: imags,\n\t\t\t\tloading: false,\n\t\t\t})\n\t\t);\n\t}, [category]);\n\treturn state;\n};\n\nexport default useFetchGift;\n","/** @format */\n\nimport React from 'react';\nimport GifItem from './gifItem';\n\nimport useFetchGift from '../hooks/useFetchGift';\nfunction GifGrid({ category }) {\n\tconst { data, loading } = useFetchGift(category);\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className='animate__animated animate__fadeInDown'>{category}</h3>\n\n\t\t\t{loading && <p>Loading ...</p>}\n\n\t\t\t<div className='card-grid animate__animated animate__fadeInDown'>\n\t\t\t\t{data.map((img) => {\n\t\t\t\t\treturn <GifItem key={img.id} {...img} />;\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</>\n\t);\n}\n\nexport default GifGrid;\n","/** @format */\n\nimport React, { useState } from 'react';\nimport AddCategory from './components/addCategory';\nimport GifGrid from './components/gifGrid';\nfunction GifExpertApp() {\n\t// const categories = ['one punch', 'samurai x', 'dragon ball z'];\n\tconst [categories, setcategories] = useState(['one punch']);\n\n\treturn (\n\t\t<>\n\t\t\t<h2>GifExpertApp</h2>\n\t\t\t<AddCategory categories={categories} setcategories={setcategories} />\n\t\t\t<hr />\n\n\t\t\t{categories.map((category, index) => {\n\t\t\t\treturn <GifGrid key={index} category={category} />;\n\t\t\t})}\n\t\t</>\n\t);\n}\n\nexport default GifExpertApp;\n","/** @format */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './gifExpertApp';\n\nReactDOM.render(\n\t<>\n\t\t<GifExpertApp />\n\t</>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}